/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.farhanfadhilah.goacademycalculator;

import java.text.DecimalFormat;
import java.util.Scanner;

public class App {
    boolean isExit = false;
    double displayedNumber = 0.0;
    DecimalFormat numberFormat = new DecimalFormat("#0.0");

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        App calculator = new App();
        while (!calculator.isExit) {
            System.out.println(calculator.toString());
            System.out.println("Enter a command : ");
            String userInput = input.nextLine();
            String[] commands = userInput.split(" ");
            String commandWord = commands[0];
            int commandNumber = 0;
            if (commands.length == 2) {
                commandNumber = Integer.parseInt(commands[1]);
            }
            calculator.calculate(commandWord, commandNumber);
        }
        System.out.println();
    }

    @Override
    public String toString() {
        return String.valueOf(numberFormat.format(displayedNumber));
    }

    public boolean isExit() {
        isExit = !isExit;
        return isExit;
    }

    public String cancel() {
        displayedNumber = 0.0;
        return toString();
    }

    public String add(double firstNumber, int secondNumber) {
        displayedNumber = firstNumber + secondNumber;
        return toString();
    }

    public String subtract(double firstNumber, int secondNumber) {
        displayedNumber = firstNumber - secondNumber;
        return toString();
    }

    public String multiply(double firstNumber, int secondNumber) {
        displayedNumber = firstNumber * secondNumber;
        return toString();
    }

    public String divide(double firstNumber, int secondNumber) {
        if (secondNumber == 0) cancel();
        else displayedNumber = firstNumber / secondNumber;
        return toString();
    }

    public String calculate(String commandWord, int commandNumber) {
        switch (commandWord) {
            case "add":
                add(displayedNumber, commandNumber);
                break;
            case "subtract":
                subtract(displayedNumber, commandNumber);
                break;
            case "multiply":
                multiply(displayedNumber, commandNumber);
                break;
            case "divide":
                divide(displayedNumber, commandNumber);
                break;
            case "cancel":
                cancel();
                break;
            case "exit":
                isExit();
                break;
            default:
        }
        return commandWord;
    }
}
